server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: ${SPRING_APPLICATION_NAME:notification-service}

  data:
    mongodb:
      uri: ${SPRING_DATA_MONGODB_URI}

  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      group-id: ${KAFKA_CONSUMER_GROUP_ID:notification-group}
      auto-offset-reset: ${KAFKA_AUTO_OFFSET_RESET:earliest}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

  mail:
    host: ${MAIL_HOST:localhost}
    port: ${MAIL_PORT:1025}
    username: ${MAIL_USERNAME:root}
    password: ${MAIL_PASSWORD:root}
    properties:
      mail:
        smtp:
          trust: ${MAIL_SMTP_TRUST:*}
        auth: ${MAIL_SMTP_AUTH:true}
        starttls:
          enabled: ${MAIL_SMTP_STARTTLS_ENABLED:true}
        connectiontimeout: ${MAIL_SMTP_CONNECTION_TIMEOUT:5000}
        timeout: ${MAIL_SMTP_TIMEOUT:3000}
        writetimeout: ${MAIL_SMTP_WRITE_TIMEOUT:5000}

app:
  kafka:
    topic: ${KAFKA_TOPIC:notification-topic}
    group: ${KAFKA_GROUP:notification-group}